#!/bin/bash

# Name		: obsondeb
# Version	: 1.0
# Author	: Younes SERRAJ
# Description	: Install obs-studio on a debian

version="1.0"
magictag="#obsondeb"

ROOTPATH="$HOME/.obsondeb"
SOURCES="$ROOTPATH/sources"

function usage()
{
    cat <<EOF
Usage: obsondeb <command>

Some useful obsondeb commands are:
   help        Display this information
   version     Display obsondeb version
   install     Install obs-studio and all its dependencies
   uninstall   Uninstall obs-studio, ffmpeg, libvpx and libx265

You can get the latest version at https://github.com/yoones/obsondeb
EOF
}

function uninstall()
{
    sudo apt-get remove -y obs-studio
    sudo apt-get remove -y ffmpeg
    sudo apt-get remove -y libvpx
    sudo apt-get remove -y libx265
    sudo rm -rf $ROOTPATH
}

function __checkinstall()
{
    sudo checkinstall \
	 -D \
	 -y \
	 --pkgname="$1" \
	 --maintainer="Younes SERRAJ <younes.serraj@gmail.com>" \
	 --fstrans=no \
	 --backup=no \
    	 --pkgversion="$(date +%Y%m%d)-git" \
	 --deldoc=yes
}

function install_dependencies()
{
    sudo apt-get install -y build-essential pkg-config cmake git checkinstall \
	 \
	 libx11-dev libgl1-mesa-dev libpulse-dev libxcomposite-dev \
	 libxinerama-dev libv4l-dev libudev-dev libfreetype6-dev \
	 libfontconfig-dev qtbase5-dev libqt5x11extras5-dev libx264-dev \
	 libxcb-xinerama0-dev libxcb-shm0-dev libjack-jackd2-dev libcurl4-openssl-dev \
	 \
	 zlib1g-dev yasm \
	 cmake mercurial \
	 libtheora-dev \
	 libvorbis-dev \
	 libfdk-aac-dev \
	 libmp3lame-dev \
	 libopus-dev \
	 libass-dev \
	 libfdk-aac-dev
}

function compile_and_install_libx265()
{
    cd $SOURCES
    hg clone https://bitbucket.org/multicoreware/x265
    cd x265/build/linux
    cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_SHARED:bool=on ../../source
    make
    __checkinstall libx265
    make clean
}

function compile_and_install_libvpx()
{
    cd $SOURCES
    wget http://storage.googleapis.com/downloads.webmproject.org/releases/webm/libvpx-1.5.0.tar.bz2
    tar xjvf libvpx-1.5.0.tar.bz2
    cd libvpx-1.5.0
    ./configure \
	--prefix=/usr \
	--enable-shared \
	--enable-pic \
	--disable-examples \
	--disable-unit-tests
    make
    __checkinstall libvpx
    make clean
}

function compile_and_install_ffmpeg()
{
    cd $SOURCES
    wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
    tar xjvf ffmpeg-snapshot.tar.bz2
    cd ffmpeg
    ./configure \
	--prefix=/usr \
	--enable-shared \
	--enable-pic \
	--enable-gpl \
	--enable-libass \
	--enable-libfdk-aac \
	--enable-libfreetype \
	--enable-libmp3lame \
	--enable-libopus \
	--enable-libtheora \
	--enable-libvorbis \
	--enable-libvpx \
	--enable-libx264 \
	--enable-libx265 \
	--enable-nonfree
    make
    __checkinstall ffmpeg
    make distclean
    hash -r
}

function compile_and_install_obs_studio()
{
    cd $SOURCES
    # git clone --depth 1 https://github.com/jp9000/obs-studio.git
    git clone --depth 1 https://github.com/yoones/obs-studio.git
    cd obs-studio
    mkdir -p build && cd build
    cmake -DUNIX_STRUCTURE=1 -DCMAKE_INSTALL_PREFIX=/usr ..
    make -j4
    __checkinstall obs-studio
    make clean
}

function install_all()
{
    echo "* Check for existing install of obsondeb..."

    # Check for existing install of obsondeb
    if [ -d "$ROOTPATH" ]; then
	echo "  obsondeb seems to exist already."
	read -p "  Delete current install (y/n)? " choice
	if [ "$choice" != "y" ]; then
	    echo "Installation aborted."
	    popd > /dev/null
	    exit 1
	fi
    fi
    uninstall

    set -e

    mkdir -p -- "$ROOTPATH"
    mkdir -p -- "$SOURCES"

    echo "* Install dependencies......"
    install_dependencies

    echo "* Compile and install libx265..."
    compile_and_install_libx265

    echo "* Compile and install libvpx..."
    compile_and_install_libvpx

    echo "* Compile and install ffmpeg..."
    compile_and_install_ffmpeg

    echo "* Compile and install obs-studio..."
    compile_and_install_obs_studio

    echo "* Done."
}

## ============
## ==  MAIN  ==
## ============

pushd ~ > /dev/null
if [ "$#" == "0" ] || [ "$1" == "help" ]; then
    usage
elif [ "$1" == "version" ]; then
    echo "obsondeb $version"
elif [ "$1" == "install" ]; then
    install_all
elif [ "$1" == "uninstall" ]; then
    uninstall
else
    usage
    popd > /dev/null
    exit 1
fi
popd > /dev/null

exit 0
